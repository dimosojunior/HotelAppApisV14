# Generated by Django 4.2.6 on 2023-11-06 00:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RestaurantAccountSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccountSystemName', models.CharField(max_length=500, verbose_name='Account System Name')),
            ],
            options={
                'verbose_name_plural': 'AccountSystem',
            },
        ),
        migrations.CreateModel(
            name='RestaurantBOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=500, verbose_name='Code')),
                ('Name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Name')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant BOM',
            },
        ),
        migrations.CreateModel(
            name='RestaurantBOMFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BOMCodeFile', models.FileField(upload_to='media/BOMFiles', verbose_name='BOM Code File')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant BOM Files',
            },
        ),
        migrations.CreateModel(
            name='RestaurantBusinessUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=500, verbose_name='Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Business Unit',
            },
        ),
        migrations.CreateModel(
            name='RestaurantCustomers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CustomerFullName', models.CharField(max_length=500, verbose_name='Customer Full Name')),
                ('PhoneNumber', models.CharField(blank=True, default='+255', max_length=14, null=True, verbose_name='Phone Number')),
                ('CustomerAddress', models.CharField(blank=True, max_length=200, null=True, verbose_name='Customer Address')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Customers',
            },
        ),
        migrations.CreateModel(
            name='RestaurantDrinksCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('total_price', models.FloatField(default=0, verbose_name='Total Price')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Cart',
            },
        ),
        migrations.CreateModel(
            name='RestaurantDrinksCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryName', models.CharField(max_length=100, verbose_name='Category Name')),
                ('Store', models.IntegerField(blank=True, null=True, verbose_name='Quantity in Store')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/DrinksImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Categories',
            },
        ),
        migrations.CreateModel(
            name='RestaurantDrinksOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField(verbose_name='Total Price')),
                ('closed_order_state', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Order Closed ?')),
                ('table_number', models.CharField(blank=True, max_length=500, null=True, verbose_name='Table Number')),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinkscart')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Orders',
            },
        ),
        migrations.CreateModel(
            name='RestaurantEventA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EventDescription', models.TextField(max_length=1000, verbose_name='Event Description')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Event A',
            },
        ),
        migrations.CreateModel(
            name='RestaurantEventB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EventDescription', models.TextField(max_length=1000, verbose_name='Event Description')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Event B',
            },
        ),
        migrations.CreateModel(
            name='RestaurantEventCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryName', models.CharField(max_length=200, verbose_name='Category Name')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Event Categories',
            },
        ),
        migrations.CreateModel(
            name='RestaurantEventCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=500, verbose_name='Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Event Code',
            },
        ),
        migrations.CreateModel(
            name='RestaurantFoodCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('total_price', models.FloatField(default=0, verbose_name='Total Price')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Cart',
            },
        ),
        migrations.CreateModel(
            name='RestaurantFoodCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryName', models.CharField(max_length=100, verbose_name='Category Name')),
                ('Store', models.IntegerField(blank=True, null=True, verbose_name='Quantity in Store')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/FoodImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Categories',
            },
        ),
        migrations.CreateModel(
            name='RestaurantFoodOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField(verbose_name='Total Price')),
                ('closed_order_state', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Order Closed ?')),
                ('table_number', models.CharField(blank=True, max_length=500, null=True, verbose_name='Table Number')),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodcart')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Orders',
            },
        ),
        migrations.CreateModel(
            name='RestaurantGridDimensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GridDimensionsName', models.CharField(max_length=500, verbose_name='Grid Dimensions')),
            ],
            options={
                'verbose_name_plural': 'GridDimensions',
            },
        ),
        migrations.CreateModel(
            name='RestaurantInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category', models.CharField(max_length=100, verbose_name='Category')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/RestaurantInventoryImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Inventory',
            },
        ),
        migrations.CreateModel(
            name='RestaurantLocationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=500, verbose_name='Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('BusinessUnit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantbusinessunit', verbose_name='Business Unit')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Location Code',
            },
        ),
        migrations.CreateModel(
            name='RestaurantOthersCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('total_price', models.FloatField(default=0, verbose_name='Total Price')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Cart',
            },
        ),
        migrations.CreateModel(
            name='RestaurantOthersCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryName', models.CharField(max_length=100, verbose_name='Category Name')),
                ('Store', models.IntegerField(blank=True, null=True, verbose_name='Quantity in Store')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/OthersImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Categories',
            },
        ),
        migrations.CreateModel(
            name='RestaurantOthersOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField(verbose_name='Total Price')),
                ('closed_order_state', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is Order Closed ?')),
                ('table_number', models.CharField(blank=True, max_length=500, null=True, verbose_name='Table Number')),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantotherscart')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Orders',
            },
        ),
        migrations.CreateModel(
            name='RestaurantProcessConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProcesId', models.CharField(max_length=500, verbose_name='Proces Id')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Process Config',
            },
        ),
        migrations.CreateModel(
            name='RestaurantProductsUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Unit', models.CharField(max_length=500, verbose_name='Unit')),
                ('Description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Products Unit',
            },
        ),
        migrations.CreateModel(
            name='RestaurantSigninTimeout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SigninTimeoutName', models.CharField(max_length=500, verbose_name='Signin Timeout Name')),
            ],
            options={
                'verbose_name_plural': 'SigninTimeout',
            },
        ),
        migrations.CreateModel(
            name='RestaurantStoreBinCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StoreBinCode', models.CharField(max_length=500, verbose_name='Store Bin Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('CardNo', models.CharField(blank=True, max_length=200, null=True, verbose_name='Card No')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Store Bin Code',
            },
        ),
        migrations.CreateModel(
            name='RestaurantSuppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SupplierFullName', models.CharField(max_length=500, verbose_name='Supplier Full Name')),
                ('PhoneNumber', models.CharField(blank=True, default='+255', max_length=14, null=True, verbose_name='Phone Number')),
                ('SupplierAddress', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Address')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Keyword', models.CharField(blank=True, max_length=500, null=True, verbose_name='Keyword')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Suppliers',
            },
        ),
        migrations.CreateModel(
            name='RestaurantTables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableNumber', models.CharField(blank=True, default='Table 20', max_length=500, null=True, verbose_name='Table Number')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('TableStatus', models.BooleanField(blank=True, default=False, null=True, verbose_name='Table Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Tables',
            },
        ),
        migrations.CreateModel(
            name='RestaurantUOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UOMShortCode', models.CharField(max_length=500, verbose_name='UOM Short Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Restaurant UOM',
            },
        ),
        migrations.CreateModel(
            name='RestaurantVatRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RateName', models.CharField(max_length=500, verbose_name='Rate Name')),
            ],
            options={
                'verbose_name_plural': 'VatRate',
            },
        ),
        migrations.CreateModel(
            name='RestaurantStoreCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=500, verbose_name='Code')),
                ('Description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('Location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantlocationcode', verbose_name='Store Location')),
                ('Process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantprocessconfig', verbose_name='Process')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Store Code',
            },
        ),
        migrations.CreateModel(
            name='RestaurantOthersProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Wali', max_length=100, verbose_name='Product Name')),
                ('product_second_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Product Second Name')),
                ('price', models.CharField(blank=True, max_length=20, null=True)),
                ('ProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Product Quantity')),
                ('InitialProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Initial Product Quantity')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/RestaurantInventoryImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('StoreBinCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantstorebincode', verbose_name='Store Bin Code')),
                ('StoreCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantstorecode', verbose_name='Store Code')),
                ('Unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit')),
                ('productCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantotherscategories', verbose_name='Product Category')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Products',
            },
        ),
        migrations.CreateModel(
            name='RestaurantOthersOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('quantity', models.IntegerField(default=1)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantcustomers')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantothersorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantothersproducts')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restauranttables')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Orders Items',
            },
        ),
        migrations.AddField(
            model_name='restaurantothersorder',
            name='orderItems',
            field=models.ManyToManyField(to='RestaurantApis.restaurantothersorderitems'),
        ),
        migrations.AddField(
            model_name='restaurantothersorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurantotherscategories',
            name='Unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit'),
        ),
        migrations.CreateModel(
            name='RestaurantOthersCartItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantotherscart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantothersproducts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Others Cart Items',
            },
        ),
        migrations.CreateModel(
            name='RestaurantFoodProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Wali', max_length=100, verbose_name='Product Name')),
                ('product_second_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Product Second Name')),
                ('price', models.CharField(blank=True, max_length=20, null=True)),
                ('ProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Product Quantity')),
                ('InitialProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Initial Product Quantity')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/RestaurantInventoryImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('StoreBinCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantstorebincode', verbose_name='Store Bin Code')),
                ('StoreCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantstorecode', verbose_name='Store Code')),
                ('Unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit')),
                ('productCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodcategories', verbose_name='Product Category')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Products',
            },
        ),
        migrations.CreateModel(
            name='RestaurantFoodOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('quantity', models.IntegerField(default=1)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantcustomers')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodproducts')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restauranttables')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Orders Items',
            },
        ),
        migrations.AddField(
            model_name='restaurantfoodorder',
            name='orderItems',
            field=models.ManyToManyField(to='RestaurantApis.restaurantfoodorderitems'),
        ),
        migrations.AddField(
            model_name='restaurantfoodorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurantfoodcategories',
            name='Unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit'),
        ),
        migrations.CreateModel(
            name='RestaurantFoodCartItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodcart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantfoodproducts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Food Cart Items',
            },
        ),
        migrations.CreateModel(
            name='RestaurantEventAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AlertID', models.CharField(max_length=500, verbose_name='Code')),
                ('ReceivedBy', models.EmailField(blank=True, max_length=1000, null=True, verbose_name='Received By')),
                ('PhoneNo', models.CharField(blank=True, default='+255', max_length=14, null=True, verbose_name='Phone No')),
                ('Message', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Message')),
                ('Status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Passive', 'Passive')], default='Active', max_length=200, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('Category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restauranteventcategories', verbose_name='Category')),
                ('EventA', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restauranteventa', verbose_name='Event A')),
                ('EventB', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restauranteventb', verbose_name='Event B')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Event Code',
            },
        ),
        migrations.CreateModel(
            name='RestaurantDrinksProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(default='Sayona', max_length=100, verbose_name='Product Name')),
                ('product_second_name', models.CharField(blank=True, default='Big', max_length=100, null=True, verbose_name='Product Second Name')),
                ('price', models.CharField(blank=True, max_length=20, null=True)),
                ('ProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Product Quantity')),
                ('InitialProductQuantity', models.IntegerField(blank=True, null=True, verbose_name='Initial Product Quantity')),
                ('CategoryImage', models.ImageField(blank=True, null=True, upload_to='media/ProductsImages/', verbose_name='Category Image')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('StoreBinCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantstorebincode', verbose_name='Store Bin Code')),
                ('StoreCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantstorecode', verbose_name='Store Code')),
                ('Unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit')),
                ('productCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinkscategories', verbose_name='Product Category')),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Products',
            },
        ),
        migrations.CreateModel(
            name='RestaurantDrinksOrderItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('order_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Status')),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantcustomers')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinksorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinksproducts')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restauranttables')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Orders Items',
            },
        ),
        migrations.AddField(
            model_name='restaurantdrinksorder',
            name='orderItems',
            field=models.ManyToManyField(to='RestaurantApis.restaurantdrinksorderitems'),
        ),
        migrations.AddField(
            model_name='restaurantdrinksorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='restaurantdrinkscategories',
            name='Unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='RestaurantApis.restaurantproductsunit', verbose_name='Product Unit'),
        ),
        migrations.CreateModel(
            name='RestaurantDrinksCartItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Updated', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinkscart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RestaurantApis.restaurantdrinksproducts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Restaurant Drinks Cart Items',
            },
        ),
    ]
